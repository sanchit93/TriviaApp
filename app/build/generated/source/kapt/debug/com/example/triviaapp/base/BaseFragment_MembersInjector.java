// Generated by Dagger (https://dagger.dev).
package com.example.triviaapp.base;

import com.example.testlocationapp.di.ViewModelFactory;
import com.example.testlocationapp.error.ErrorHandler;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector implements MembersInjector<BaseFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<ErrorHandler> errorHandlerProvider;

  public BaseFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ErrorHandler> errorHandlerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.errorHandlerProvider = errorHandlerProvider;
  }

  public static MembersInjector<BaseFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<ErrorHandler> errorHandlerProvider) {
    return new BaseFragment_MembersInjector(androidInjectorProvider, viewModelFactoryProvider, errorHandlerProvider);
  }

  @Override
  public void injectMembers(BaseFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectErrorHandler(instance, errorHandlerProvider.get());
  }

  @InjectedFieldSignature("com.example.triviaapp.base.BaseFragment.viewModelFactory")
  public static void injectViewModelFactory(BaseFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.example.triviaapp.base.BaseFragment.errorHandler")
  public static void injectErrorHandler(BaseFragment instance, ErrorHandler errorHandler) {
    instance.errorHandler = errorHandler;
  }
}
