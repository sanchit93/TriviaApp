// Generated by Dagger (https://dagger.dev).
package com.example.triviaapp.di;

import com.example.triviaapp.DatabaseRepository;
import com.example.triviaapp.DatabaseRepositoryImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAppDatabaseRepoImplFactory implements Factory<DatabaseRepository> {
  private final Provider<DatabaseRepositoryImpl> databaseRepositoryProvider;

  public AppModule_ProvideAppDatabaseRepoImplFactory(
      Provider<DatabaseRepositoryImpl> databaseRepositoryProvider) {
    this.databaseRepositoryProvider = databaseRepositoryProvider;
  }

  @Override
  public DatabaseRepository get() {
    return provideAppDatabaseRepoImpl(databaseRepositoryProvider.get());
  }

  public static AppModule_ProvideAppDatabaseRepoImplFactory create(
      Provider<DatabaseRepositoryImpl> databaseRepositoryProvider) {
    return new AppModule_ProvideAppDatabaseRepoImplFactory(databaseRepositoryProvider);
  }

  public static DatabaseRepository provideAppDatabaseRepoImpl(
      DatabaseRepositoryImpl databaseRepository) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAppDatabaseRepoImpl(databaseRepository));
  }
}
