// Generated by Dagger (https://dagger.dev).
package com.example.triviaapp.di;

import android.app.Application;
import com.example.triviaapp.TriviaApp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContextModule_ProvideApplication$app_debugFactory implements Factory<Application> {
  private final Provider<TriviaApp> applicationProvider;

  public ContextModule_ProvideApplication$app_debugFactory(
      Provider<TriviaApp> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Application get() {
    return provideApplication$app_debug(applicationProvider.get());
  }

  public static ContextModule_ProvideApplication$app_debugFactory create(
      Provider<TriviaApp> applicationProvider) {
    return new ContextModule_ProvideApplication$app_debugFactory(applicationProvider);
  }

  public static Application provideApplication$app_debug(TriviaApp application) {
    return Preconditions.checkNotNullFromProvides(ContextModule.INSTANCE.provideApplication$app_debug(application));
  }
}
