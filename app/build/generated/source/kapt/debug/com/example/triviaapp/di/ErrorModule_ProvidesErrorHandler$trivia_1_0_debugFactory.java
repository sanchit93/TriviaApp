// Generated by Dagger (https://dagger.dev).
package com.example.triviaapp.di;

import com.example.testlocationapp.error.ErrorHandler;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ErrorModule_ProvidesErrorHandler$trivia_1_0_debugFactory implements Factory<ErrorHandler> {
  private final Provider<ErrorHandlerImpl> errorHandlerProvider;

  public ErrorModule_ProvidesErrorHandler$trivia_1_0_debugFactory(
      Provider<ErrorHandlerImpl> errorHandlerProvider) {
    this.errorHandlerProvider = errorHandlerProvider;
  }

  @Override
  public ErrorHandler get() {
    return providesErrorHandler$trivia_1_0_debug(errorHandlerProvider.get());
  }

  public static ErrorModule_ProvidesErrorHandler$trivia_1_0_debugFactory create(
      Provider<ErrorHandlerImpl> errorHandlerProvider) {
    return new ErrorModule_ProvidesErrorHandler$trivia_1_0_debugFactory(errorHandlerProvider);
  }

  public static ErrorHandler providesErrorHandler$trivia_1_0_debug(ErrorHandlerImpl errorHandler) {
    return Preconditions.checkNotNullFromProvides(ErrorModule.INSTANCE.providesErrorHandler$trivia_1_0_debug(errorHandler));
  }
}
